{
  "info": {
    "name": "IdEinstein API Comprehensive Test",
    "description": "Complete API testing for IdEinstein website",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001"
    }
  ],
  "item": [
    {
      "name": "Authentication Tests",
      "item": [
        {
          "name": "NextAuth Providers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/providers",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "providers"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Signup Endpoint",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"test@example.com\",\"password\":\"testpassword123\",\"name\":\"Test User\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "signup"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response is valid', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 400, 405]);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Core API Tests",
      "item": [
        {
          "name": "Contact Form",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Test User\",\"email\":\"test@example.com\",\"message\":\"Test message from Postman\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/contact",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "contact"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Contact form accepts valid data', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "pm.test('Response time is acceptable', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Services API",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/services",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "services"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Services API is accessible', function () {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});",
                  "pm.test('Response contains services data', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Blog Posts API",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/blog/posts",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "blog",
                "posts"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Blog API is accessible', function () {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "});",
                  "pm.test('Response is valid JSON', function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Quote Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Test User\",\"email\":\"test@example.com\",\"service\":\"CAD Modeling\",\"description\":\"Test quote request from Postman\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/quotes",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "quotes"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Quote request is processed', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 400]);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Data Validation Tests",
      "item": [
        {
          "name": "Contact Form - Invalid Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\":\"Test User\",\"email\":\"invalid-email\",\"message\":\"Test message\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/contact",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "contact"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid email is rejected', function () {",
                  "    pm.expect(pm.response.code).to.equal(400);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Newsletter - Invalid Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"not-an-email\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/newsletter",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "newsletter"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid newsletter email is rejected', function () {",
                  "    pm.expect(pm.response.code).to.equal(400);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Error Handling Tests",
      "item": [
        {
          "name": "Non-existent Endpoint",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/nonexistent",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "nonexistent"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Non-existent endpoint returns 404', function () {",
                  "    pm.expect(pm.response.code).to.equal(404);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Method Not Allowed",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/contact",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "contact"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Method not allowed returns 405', function () {",
                  "    pm.expect(pm.response.code).to.equal(405);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}